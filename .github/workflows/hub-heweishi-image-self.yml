name: hub.heweishi.image
on:
  workflow_dispatch:
  push:
    branches:
      - self
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "self"
      - name: Copy Specific Files üìÅ
        run: |
          mkdir logs
          mkdir temp_deploy
          cp -r logs temp_deploy/
          cp ./setup.sh temp_deploy/
          cp .env.example temp_deploy/
          cp docker-compose.yml temp_deploy/
          cp docker-compose.self.yml temp_deploy/
          cp gunicorn.conf.py temp_deploy/
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: temp_deploy
          clean: false
          branch: self-dist
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      # ÁôªÂΩï GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # username:${ { github.actor }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}
      # ÁôªÂΩï DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # ÁôªÂΩïÈòøÈáå‰∫ëÂÆπÂô®ÈïúÂÉèÊúçÂä°
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.cn-guangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}
      - name: Set DOCKER_REPO_TAGGED based on branch or tag
        # ÊàëÁöÑÂêçÁß∞Â§ßÂÜôÊâÄ‰ª•Ë¶ÅËΩ¨Â∞èÂÜôÔºåÂê¶Âàô‰ºöÊä•Èîô
        run: |
          echo "GHCR_TAGGED=$(echo ghcr.io/${{ github.repository_owner }}/hubheweishi:v1.0 | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "DOCKERHUB_TAGGED=$(echo ${{secrets.DOCKERHUB_USERNAME}}/hubheweishi:v1.0 | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "ALIYUN_TAGGED=$(echo registry.cn-guangzhou.aliyuncs.com/${{secrets.ALIYUN_BASENAME}}/hubheweishi:v1.0 | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      # ÊûÑÂª∫Âπ∂Êé®ÈÄÅÈïúÂÉè
      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.GHCR_TAGGED }}
            ${{ env.DOCKERHUB_TAGGED }}
            ${{ env.ALIYUN_TAGGED }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository_owner }}/hubheweishi
            org.opencontainers.image.description=hub heweishi image

      # - name: Build and push Docker image
      #   env:
      #     DOCKER_REPO_TAGGED: ${{ env.DOCKER_REPO_TAGGED }}
      #   run: |
      #     docker buildx build \
      #     --platform linux/amd64,linux/arm64 \
      #     --label "org.opencontainers.image.source=https://github.com/${{ github.repository_owner }}/hubheweishi" \
      #     --label "org.opencontainers.image.description=hub heweishi image" \
      #     --push \
      #     --cache-from=type=local,src=/tmp/.buildx-cache \
      #     --cache-to=type=local,dest=/tmp/.buildx-cache \
      #     -t ${DOCKER_REPO_TAGGED} \
      #     -f Dockerfile \
      #     .
